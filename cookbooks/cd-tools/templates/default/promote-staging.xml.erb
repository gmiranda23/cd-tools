<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Triggers from converge to dev. Pin new cookbook to staging environment, converge staging.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Discover:anonymous</permission>
      <permission>hudson.model.Item.Discover:github</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:github</permission>
      <permission>hudson.model.Item.Build:anonymous</permission>
      <permission>hudson.model.Item.Build:github</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.8">
      <projectUrl>https://<%= @job['git_fqdn'] %>/<%= @job['git_project_owner'] %>/<%= @job['id'] %>/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@1.5.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>git@<%= @job['git_fqdn'] %>:<%= @job['git_project_owner'] %>/<%= @job['id'] %>.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
export CHEF_SERVER_URL=&apos;https://chef.company.com/organizations/gmiranda-test&apos;
export NODE_NAME=&apos;chef.company.com&apos;
export CLIENT_KEY=/var/lib/jenkins/.chef/chef.company.com.pem

/var/lib/jenkins/tools/reporter.rb Pinning cookbook to staging environment
/var/lib/jenkins/tools/pin_environment.rb staging</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

/var/lib/jenkins/tools/reporter.rb Updating staging environment in requested chef-org git repos
/var/lib/jenkins/tools/sync_env_repos.rb -g <%= @job['git_fqdn'] %> -o <%= @job['git_project_owner'] %> -e staging -r <%= @job['id'] %></command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
/var/lib/jenkins/tools/reporter.rb Converging staging environment
/opt/chef/bin/knife ssh chef_environment:staging &apos;sudo chef-client&apos; -c ~/tools/ci-test-knife.rb</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
/var/lib/jenkins/tools/reporter.rb This is where we would launch a test framework to verify the staging environment looks good. The current thinking is that this would Cucumber and Leibniz running holistic acceptance tests.</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <au.com.centrumsystems.hudson.plugin.buildpipeline.trigger.BuildPipelineTrigger plugin="build-pipeline-plugin@1.3.3">
      <downstreamProjectNames>java-promote-to-production</downstreamProjectNames>
    </au.com.centrumsystems.hudson.plugin.buildpipeline.trigger.BuildPipelineTrigger>
  </publishers>
  <buildWrappers/>
</project>
